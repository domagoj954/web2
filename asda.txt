    procedure p_save_predsjednik(in_json in JSON_OBJECT_T, out_json out JSON_OBJECT_T) AS
      l_obj JSON_OBJECT_T;
      l_predsjednik predsjednik%rowtype;
      l_count number;
      l_id number;
      l_string varchar2(1000);
      l_search varchar2(100);
      l_page number; 
      l_perpage number;
      l_action varchar2(10);
  begin
  
     l_obj := JSON_OBJECT_T(in_json);  
     l_string := in_json.TO_STRING;
  
     SELECT
        JSON_VALUE(l_string, '$.ID' ),
        JSON_VALUE(l_string, '$.IDklub'),
        JSON_VALUE(l_string, '$.IDlige'),
        JSON_VALUE(l_string, '$.IME' ),
        JSON_VALUE(l_string, '$.PREZIME' )
        JSON_VALUE(l_string, '$.GODINE' )
        JSON_VALUE(l_string, '$.NACIONALNOST' )
    INTO
        l_predsjednik.id,
        l_predsjednik.IDklub,
        l_predsjednik.IDlige,
        l_predsjednik.IME,
        l_predsjednik.PREZIME,
        l_predsjednik.GODINE,
        l_predsjednik.NACIONALNOST,
        l_action
    FROM 
       dual; 
       
    --FE kontrole
    if (nvl(l_action, ' ') = ' ') then
        if (filter.f_check_predsjednik (l_obj, out_json)) then
           raise e_iznimka; 
        end if;  
    end if;
           
    if (l_predsjednik.id is null) then
        begin
           insert into predsjednik (IDklub, IDlige, IME, PREZIME, GODINE, NACIONALNOST) values
             (l_predsjednik.IDklub,l_predsjednik.IDlige, l_predsjednik.IME, l_terner.PREZIME,
              l_predsjednik.GODINE, l_predsjednik.NACIONALNSOT);
           commit;
           
           l_obj.put('h_message', 'Uspješno ste unijeli predsjednika'); 
           l_obj.put('h_errcode', 0);
           out_json := l_obj;
           
        exception
           when others then 
               COMMON.p_errlog('p_users',dbms_utility.format_error_backtrace,SQLCODE,SQLERRM, l_string);
               rollback;
               raise;
        end;
    else
       if (nvl(l_action, ' ') = 'delete') then
           begin
               delete predsjednik where id = l_predsjednik.id;
               commit;    
               
               l_obj.put('h_message', 'Uspješno ste obrisali predsjednika'); 
               l_obj.put('h_errcode', 0);
               out_json := l_obj;
            exception
               when others then 
                   COMMON.p_errlog('p_users',dbms_utility.format_error_backtrace,SQLCODE,SQLERRM, l_string);
                   rollback;
                   raise;
            end;
       
       else
       
           begin
               update predsjednik 
                  set IDklub = l_predsjednik.IDklub,
                      IDlige = l_terner.IDlige,
                      IME = l_predsjednik.IME,
                      PREZIME = l_predsjednik.PREZIME,
                      GODINE = l_predsjednik.GODINE,
                      NACIONALNOST = l_predsjednik.NACIONALNOST 
               where
                  id = l_predsjednik.id;
               commit;    
               
               l_obj.put('h_message', 'Uspješno ste promijenili predsjednika'); 
               l_obj.put('h_errcode', 0);
               out_json := l_obj;
            exception
               when others then 
                   COMMON.p_errlog('p_users',dbms_utility.format_error_backtrace,SQLCODE,SQLERRM, l_string);
                   rollback;
                   raise;
            end;
       end if;     
    end if;
    
    
  exception
     when e_iznimka then
        out_json := l_obj; 
     when others then
        COMMON.p_errlog('p_save_predsjednik',dbms_utility.format_error_backtrace,SQLCODE,SQLERRM, l_string);
        l_obj.put('h_message', 'Dogodila se greška u obradi podataka!'); 
        l_obj.put('h_errcode', 101);
        out_json := l_obj;
  END p_save_predsjednik;